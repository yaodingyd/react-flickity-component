{"version":3,"sources":["../src/index.js"],"names":["FlickityComponent","props","state","flickityReady","carousel","flkty","prevProps","prevState","children","options","draggable","initialIndex","reloadOnUpdate","deactivate","selectedIndex","undefined","length","activate","reloadCells","canUseDOM","disableImagesLoaded","flickityRef","Flickity","setFlickityToReady","setState","mountNode","querySelector","React","createElement","elementType","className","ref","c","renderPortal","Component","propTypes","PropTypes","bool","object","string","array","func","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport Flickity from 'flickity';\nimport imagesloaded from 'imagesloaded';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport PropTypes from 'prop-types';\n\nclass FlickityComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flickityReady: false,\n    };\n\n    this.carousel = null;\n    this.flkty = null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      children,\n      options: { draggable, initialIndex },\n      reloadOnUpdate,\n    } = this.props;\n    const { flickityReady } = this.state;\n    if (reloadOnUpdate || (!prevState.flickityReady && flickityReady)) {\n      this.flkty.deactivate();\n      this.flkty.selectedIndex = initialIndex || 0;\n      this.flkty.options.draggable =\n        draggable === undefined\n          ? children\n            ? children.length > 1\n            : false\n          : draggable;\n      this.flkty.activate();\n    } else {\n      this.flkty.reloadCells();\n    }\n  }\n\n  componentDidMount() {\n    if (!canUseDOM) return null;\n    const { disableImagesLoaded, flickityRef, options } = this.props;\n    const carousel = this.carousel;\n    this.flkty = new Flickity(carousel, options);\n    const setFlickityToReady = () => this.setState({ flickityReady: true });\n    if (disableImagesLoaded) setFlickityToReady();\n    else imagesloaded(carousel, setFlickityToReady);\n    if (flickityRef) flickityRef(this.flkty);\n  }\n\n  renderPortal() {\n    if (!this.carousel) return null;\n    const mountNode = this.carousel.querySelector('.flickity-slider');\n    if (mountNode) return createPortal(this.props.children, mountNode);\n  }\n\n  render() {\n    return React.createElement(\n      this.props.elementType,\n      {\n        className: this.props.className,\n        ref: c => {\n          this.carousel = c;\n        },\n      },\n      this.renderPortal()\n    );\n  }\n}\n\nFlickityComponent.propTypes = {\n  disableImagesLoaded: PropTypes.bool,\n  reloadOnUpdate: PropTypes.bool,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  elementType: PropTypes.string,\n  children: PropTypes.array,\n  flickityRef: PropTypes.func,\n};\n\nFlickityComponent.defaultProps = {\n  disableImagesLoaded: false,\n  reloadOnUpdate: false,\n  options: {},\n  className: '',\n  elementType: 'div',\n};\n\nexport default FlickityComponent;\n"]}