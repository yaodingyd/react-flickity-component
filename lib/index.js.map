{"version":3,"sources":["../src/index.js"],"names":["FlickityComponent","props","state","flickityReady","carousel","flkty","prevProps","prevState","children","options","draggable","initialIndex","reloadOnUpdate","deactivate","selectedIndex","undefined","length","activate","reloadCells","canUseDOM","disableImagesLoaded","flickityRef","Flickity","setFlickityToReady","setState","mountNode","querySelector","React","createElement","elementType","className","ref","c","renderPortal","Component","propTypes","PropTypes","array","string","bool","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport Flickity from 'flickity';\nimport imagesloaded from 'imagesloaded';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport PropTypes from 'prop-types';\n\nclass FlickityComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flickityReady: false,\n    };\n\n    this.carousel = null;\n    this.flkty = null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      children,\n      options: { draggable, initialIndex },\n      reloadOnUpdate,\n    } = this.props;\n    const { flickityReady } = this.state;\n    if (reloadOnUpdate || (!prevState.flickityReady && flickityReady)) {\n      this.flkty.deactivate();\n      this.flkty.selectedIndex = initialIndex || 0;\n      this.flkty.options.draggable =\n        draggable === undefined\n          ? children\n            ? children.length > 1\n            : false\n          : draggable;\n      this.flkty.activate();\n    } else {\n      this.flkty.reloadCells();\n    }\n  }\n\n  componentDidMount() {\n    if (!canUseDOM) return null;\n    const { disableImagesLoaded, flickityRef, options } = this.props;\n    const carousel = this.carousel;\n    this.flkty = new Flickity(carousel, options);\n    const setFlickityToReady = () => this.setState({ flickityReady: true });\n    if (disableImagesLoaded) setFlickityToReady();\n    else imagesloaded(carousel, setFlickityToReady);\n    if (flickityRef) flickityRef(this.flkty);\n  }\n\n  renderPortal() {\n    if (!this.carousel) return null;\n    const mountNode = this.carousel.querySelector('.flickity-slider');\n    if (mountNode) return createPortal(this.props.children, mountNode);\n  }\n\n  render() {\n    return React.createElement(\n      this.props.elementType,\n      {\n        className: this.props.className,\n        ref: c => {\n          this.carousel = c;\n        },\n      },\n      this.props.static ? this.props.children : this.renderPortal()\n    );\n  }\n}\n\nFlickityComponent.propTypes = {\n  children: PropTypes.array,\n  className: PropTypes.string,\n  disableImagesLoaded: PropTypes.bool,\n  elementType: PropTypes.string,\n  flickityRef: PropTypes.func,\n  options: PropTypes.object,\n  reloadOnUpdate: PropTypes.bool,\n  static: PropTypes.bool,\n};\n\nFlickityComponent.defaultProps = {\n  className: '',\n  disableImagesLoaded: false,\n  elementType: 'div',\n  options: {},\n  reloadOnUpdate: false,\n  static: false,\n};\n\nexport default FlickityComponent;\n"],"file":"index.js"}